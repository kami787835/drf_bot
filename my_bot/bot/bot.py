import requests
import asyncio
from aiogram import Bot, Dispatcher, Router, types
from aiogram.filters import Command
from datetime import datetime

API_TOKEN = "7691732315:AAEjdF14vzqgowS5I4cht-DtCeYv65z2wXA"
ADMIN_ID = 5793264698  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π Telegram ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

bot = Bot(token=API_TOKEN)
dp = Dispatcher()
router = Router()

dp.include_router(router)

# –°–ø–∏—Å–æ–∫ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
approved_users = set()
pending_users = {}

@router.message(Command("start"))
async def send_welcome(message: types.Message):
    user_id = message.from_user.id

    if user_id in approved_users:
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —á—Ç–æ-—Ç–æ, –∏ —è —Å–æ—Ö—Ä–∞–Ω—é –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
    else:
        pending_users[user_id] = message.from_user
        await bot.send_message(ADMIN_ID, f"üë§ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –≤–æ–π—Ç–∏:\n"
                                         f"ID: {user_id}\n"
                                         f"–ò–º—è: {message.from_user.first_name}\n"
                                         f"–§–∞–º–∏–ª–∏—è: {message.from_user.last_name or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
                                         f"Username: @{message.from_user.username or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n\n"
                                         f"‚úÖ –î–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ: **–¥–∞**\n"
                                         f"‚ùå –î–ª—è –æ—Ç–∫–∞–∑–∞ –Ω–∞–ø–∏—à–∏—Ç–µ: **–Ω–µ—Ç**")
        await message.answer("‚è≥ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –ñ–¥–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")

@router.message()
async def handle_admin_response(message: types.Message):
    if message.from_user.id == ADMIN_ID:
        command = message.text.lower()
        if command == "–¥–∞" or command == "–Ω–µ—Ç":
            for user_id, user in list(pending_users.items()):
                if command == "–¥–∞":
                    approved_users.add(user_id)
                    del pending_users[user_id]
                    await bot.send_message(user_id, "‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ–¥–æ–±—Ä–∏–ª –≤–∞—à –¥–æ—Å—Ç—É–ø! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.")
                    await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ–¥–æ–±—Ä–µ–Ω.")
                elif command == "–Ω–µ—Ç":
                    del pending_users[user_id]
                    await bot.send_message(user_id, "‚ùå –í–∞–º –æ—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ.")
                    await message.answer(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–∫–ª–æ–Ω–µ–Ω.")
                return

    user_id = message.from_user.id
    if user_id not in approved_users:
        await message.answer("‚õî –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –ø–æ–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –æ–¥–æ–±—Ä–∏—Ç –≤–∞—Å.")
        return

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    payload = {
        'user_id': user_id,
        'username': message.from_user.username or "–ù–µ —É–∫–∞–∑–∞–Ω",
        'first_name': message.from_user.first_name or "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
        'last_name': message.from_user.last_name or "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
        'text': message.text,
        'timestamp': datetime.now().isoformat()
    }
    response = requests.post('http://127.0.0.1:8000/botmessages/', json=payload)

    if response.status_code == 201:
        await message.answer("‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –±–∞–∑–µ.")
    else:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
